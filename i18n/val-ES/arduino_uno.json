{
  "arduino_uno": "Arduino Uno",
  "extensionName": "Arduino Uno",
  "extensionDescription": "",
  "firmwares_version_0": "Online firmware",
  "UPDATE_FIRMWARE": "Actualitza el micropogramari",
  "connect_fail_6d44027d": "Please make sure the USB cable is properly connected to the device.",
  "connect_fail_a605d9a4": "Please make sure the device to be connected is turned on.",
  "connect_fail_7f65f6e1": "Only one device can be connected at a time in this version.So connecting this device will lead to the disconnection of the previous one.",
  "upload_fail_6d692a95": "Please review the coding blocks or the code for this device. Make sure all the data, parameters and programming logic are correct.",
  "upload_fail_f97d60f4": "Please make sure if your device is properly connected. You can restart the device and connect it again.",
  "firmware_success_b74d4379": "For a better experience, you can restart the device and connect it once again.",
  "firmware_fail_c46a5a9b": "Please make sure the device is properly connected. You can restart the device, connect it again and then try updating the firmware once again.",
  "getDigital": "[ICON] read digital pin [PORT]",
  "getAnalog": "[ICON] read analog pin（A）[PORT]",
  "getPulse": "[ICON]read pulse pin[PORT] timeout[TIME]",
  "SETDIGITAL_LEVEL_0": "high",
  "SETDIGITAL_LEVEL_1": "low",
  "setDigital": "[ICON] set digital pin [PORT] output as [LEVEL]",
  "setPwm": "[ICON] set PWM [PORT] output as [POWER]",
  "SETTONE_NOTE_0": "C2",
  "SETTONE_NOTE_1": "D2",
  "SETTONE_NOTE_2": "E2",
  "SETTONE_NOTE_3": "F2",
  "SETTONE_NOTE_4": "G2",
  "SETTONE_NOTE_5": "A2",
  "SETTONE_NOTE_6": "B2",
  "SETTONE_NOTE_7": "C3",
  "SETTONE_NOTE_8": "D3",
  "SETTONE_NOTE_9": "E3",
  "SETTONE_NOTE_10": "F3",
  "SETTONE_NOTE_11": "G3",
  "SETTONE_NOTE_12": "A3",
  "SETTONE_NOTE_13": "B3",
  "SETTONE_NOTE_14": "C4",
  "SETTONE_NOTE_15": "D4",
  "SETTONE_NOTE_16": "E4",
  "SETTONE_NOTE_17": "F4",
  "SETTONE_NOTE_18": "G4",
  "SETTONE_NOTE_19": "A4",
  "SETTONE_NOTE_20": "B4",
  "SETTONE_NOTE_21": "C5",
  "SETTONE_NOTE_22": "D5",
  "SETTONE_NOTE_23": "E5",
  "SETTONE_NOTE_24": "F5",
  "SETTONE_NOTE_25": "G5",
  "SETTONE_NOTE_26": "A5",
  "SETTONE_NOTE_27": "B5",
  "SETTONE_NOTE_28": "C6",
  "SETTONE_NOTE_29": "D6",
  "SETTONE_NOTE_30": "E6",
  "SETTONE_NOTE_31": "F6",
  "SETTONE_NOTE_32": "G6",
  "SETTONE_NOTE_33": "A6",
  "SETTONE_NOTE_34": "B6",
  "SETTONE_NOTE_35": "C7",
  "SETTONE_NOTE_36": "D7",
  "SETTONE_NOTE_37": "E7",
  "SETTONE_NOTE_38": "F7",
  "SETTONE_NOTE_39": "G7",
  "SETTONE_NOTE_40": "A7",
  "SETTONE_NOTE_41": "B7",
  "SETTONE_NOTE_42": "C8",
  "setTone": "[ICON] play pin[PORT] with note [NOTE] for [BEAT] beats",
  "setServo": "[ICON] set servo pin [PORT] angle as[ANGLE]",
  "SUSPEND_PORT_0": "2",
  "SUSPEND_PORT_1": "3",
  "SUSPEND_MODE_0": "rising edge",
  "SUSPEND_MODE_1": "falling edge",
  "SUSPEND_MODE_2": "change",
  "SUSPEND_MODE_3": "low",
  "suspend": "[ICON] suspend pin[PORT] mode [MODE] executes",
  "cancelSuspend": "[ICON] do not suspend pin [PORT] ",
  "CATEGORY_PIN": "Pin",
  "serialWrite": "[ICON] write[TEXT]to serial port",
  "getSerialAvailable": "[ICON] readable bytes from serial port",
  "serialRead": "[ICON] read a byte from serial port",
  "CATEGORY_SERIALPORT": "serial port",
  "mapping": "[ICON] map [value] from（ [fromLow] , [fromHigh] ）to（ [toLow] , [toHigh] ）",
  "constraint": "[ICON] constraint [x] between（ [a] , [b] ）",
  "TYPECONVERSION_TYPE_0": "whole number",
  "TYPECONVERSION_TYPE_1": "decimal",
  "TYPECONVERSION_TYPE_2": "string",
  "typeConversion": "[ICON] [NUMBER] converted to [TYPE]",
  "ASCIICharConversion": "[ICON] [NUMBER] converted ASCII character",
  "ASCIINumConversion": "[ICON] [STRING] converted ASCII number",
  "cate_ead4430e": "Dades",
  "getUltrasonic": "[ICON] read ultrasonic sensor trig pin [PORT1] echo pin [PORT2]",
  "getTimer": "[ICON] timer",
  "resetTimer": "[ICON] reset timer",
  "CATEGORY_SENSOR": "Sensor",
  "arduino_when_board_launch": "when Arduino Uno starts up",
  "firmwares_description_0": "none",
  "settings_0": "Actualitza el micropogramari",
  "ASCIICONVERSION_TYPE_0": "ASCII character",
  "ASCIICONVERSION_TYPE_1": "ASCII number",
  "ASCIIConversion": "[STRING] converted to [TYPE] "
}
