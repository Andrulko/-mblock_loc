{
  "arduino_nano_old": "Arduino Nano (old)",
  "extensionName": "Arduino Nano (old)",
  "extensionDescription": "",
  "firmwares_version_0": "Online Firmware",
  "UPDATE_FIRMWARE": "Firmware aktualisieren",
  "connect_fail_6d44027d": "Stelle bitte sicher, dass das USB-Kabel ordnungsgemäß mit dem Gerät verbunden ist.",
  "connect_fail_a605d9a4": "Stelle bitte sicher, dass das zu verbindende Gerät eingeschaltet ist.",
  "connect_fail_7f65f6e1": "In dieser Version kann jeweils nur ein Gerät angeschlossen werden. Der Anschluss dieses Geräts führt also zur Trennung der vorherigen.",
  "upload_fail_6d692a95": "Bitte überprüfe die Codierblöcke oder den Code für dieses Gerät. Stellen Sie sicher, dass alle Daten, Parameter und die Programmierlogik korrekt sind.",
  "upload_fail_f97d60f4": "Bitte stellen Sie sicher, ob Ihr Gerät richtig angeschlossen ist. Sie können das Gerät neu starten und wieder anschließen.",
  "firmware_success_b74d4379": "Für ein besseres Erlebnis kann man das Gerät neu starten und wieder anschließen.",
  "firmware_fail_c46a5a9b": "Bitte stellen Sie sicher, dass das Gerät richtig angeschlossen ist. Sie können das Gerät neu starten, es wieder anschließen und dann versuchen, die Firmware erneut zu aktualisieren.",
  "getDigital": "[ICON] Digitalpin lesen [PORT]",
  "getAnalog": "[ICON] analogen Pin（A）[PORT] lesen",
  "getPulse": "[ICON]Pulsstift lesen[PORT] Timeout[TIME]",
  "SETDIGITAL_LEVEL_0": "hoch",
  "SETDIGITAL_LEVEL_1": "niedrig",
  "setDigital": "[ICON] digitalen Pin von Ausgang [PORT] als [LEVEL] setzen",
  "setPwm": "[ICON] PWM-Ausgang [PORT] als [POWER] festlegen",
  "SETTONE_NOTE_0": "C2",
  "SETTONE_NOTE_1": "D2",
  "SETTONE_NOTE_2": "E2",
  "SETTONE_NOTE_3": "F2",
  "SETTONE_NOTE_4": "G2",
  "SETTONE_NOTE_5": "A2",
  "SETTONE_NOTE_6": "B2",
  "SETTONE_NOTE_7": "C3",
  "SETTONE_NOTE_8": "D3",
  "SETTONE_NOTE_9": "E3",
  "SETTONE_NOTE_10": "F3",
  "SETTONE_NOTE_11": "G3",
  "SETTONE_NOTE_12": "A3",
  "SETTONE_NOTE_13": "B3",
  "SETTONE_NOTE_14": "C4",
  "SETTONE_NOTE_15": "D4",
  "SETTONE_NOTE_16": "E4",
  "SETTONE_NOTE_17": "F4",
  "SETTONE_NOTE_18": "G4",
  "SETTONE_NOTE_19": "A4",
  "SETTONE_NOTE_20": "B4",
  "SETTONE_NOTE_21": "C5",
  "SETTONE_NOTE_22": "D5",
  "SETTONE_NOTE_23": "E5",
  "SETTONE_NOTE_24": "F5",
  "SETTONE_NOTE_25": "G5",
  "SETTONE_NOTE_26": "A5",
  "SETTONE_NOTE_27": "B5",
  "SETTONE_NOTE_28": "C6",
  "SETTONE_NOTE_29": "D6",
  "SETTONE_NOTE_30": "E6",
  "SETTONE_NOTE_31": "F6",
  "SETTONE_NOTE_32": "G6",
  "SETTONE_NOTE_33": "A6",
  "SETTONE_NOTE_34": "B6",
  "SETTONE_NOTE_35": "C7",
  "SETTONE_NOTE_36": "D7",
  "SETTONE_NOTE_37": "E7",
  "SETTONE_NOTE_38": "F7",
  "SETTONE_NOTE_39": "G7",
  "SETTONE_NOTE_40": "A7",
  "SETTONE_NOTE_41": "B7",
  "SETTONE_NOTE_42": "C8",
  "setTone": "play pin[PORT] with note [NOTE] for [BEAT] beats",
  "setServo": "set servo pin [PORT] angle as[ANGLE]",
  "SUSPEND_PORT_0": "2",
  "SUSPEND_PORT_1": "3",
  "SUSPEND_MODE_0": "Steigender Rand",
  "SUSPEND_MODE_1": "Fallende Kante",
  "SUSPEND_MODE_2": "Veränderung",
  "SUSPEND_MODE_3": "niedrig",
  "suspend": "[ICON] Suspendierung[PORT] Modus [MODE] Führt",
  "cancelSuspend": "[ICON] Nicht aussetzen [PORT]",
  "CATEGORY_PIN": "Pin",
  "serialWrite": "[TEXT] an serielle Schnittstelle schreiben",
  "getSerialAvailable": "[ICON] lesbare Bytes vom seriellen Schnittstelle",
  "serialRead": "[ICON] ein Byte vom seriellen Schnittstelle lesen",
  "CATEGORY_SERIALPORT": "serielle Schnittstelle",
  "mapping": "[ICON] Karte [value] Von ( [fromLow] , [fromHigh] ) zu ( [toLow] , [toHigh] ）",
  "constraint": "[ICON] Einschränkung [x] Zwischendurch [a] , [b] ）",
  "TYPECONVERSION_TYPE_0": "Ganze Zahl",
  "TYPECONVERSION_TYPE_1": "Decimal",
  "TYPECONVERSION_TYPE_2": "string",
  "typeConversion": "[ICON] [NUMBER] Konvertiert in [TYPE]",
  "ASCIICharConversion": "[ICON] [NUMBER] Konvertierter ASCII-Zeichen",
  "ASCIINumConversion": "[ICON] [STRING] Konvertierte ASCII-Nummer",
  "cate_ead4430e": "Daten",
  "getUltrasonic": "[ICON] read ultrasonic sensor trig pin [PORT1] echo pin [PORT2]",
  "getTimer": "[ICON]Stoppuhr",
  "resetTimer": "[ICON]setze Stoppuhr zurück",
  "CATEGORY_SENSOR": "Fühlen",
  "arduino_when_board_launch": "wenn Arduino startet",
  "firmwares_description_0": "keine",
  "arduino_nano": "Arduino Nano",
  "settings_0": "Firmware aktualisieren"
}
