{
  "arduino_nano": "Arduino Nano",
  "extensionName": "Arduino Nano",
  "extensionDescription": "",
  "firmwares_version_0": "Прошивка онлайн",
  "UPDATE_FIRMWARE": "Обновить прошивку",
  "connect_fail_6d44027d": "Убедитесь, что кабель USB правильно подключен к устройству.",
  "connect_fail_a605d9a4": "Убедитесь, что подключенное устройство включено.",
  "connect_fail_7f65f6e1": "Только одно устройство может быть подключено одновременно в этой версии. Таким образом, подключение этого устройства приведет к разъединению предыдущего.",
  "upload_fail_6d692a95": "Пожалуйста, просмотрите блоки кодирования или код для этого устройства. Убедитесь, что все данные, параметры и логика программирования верны.",
  "upload_fail_f97d60f4": "Пожалуйста, убедитесь, что ваше устройство подключено правильно. Можно перезагрузить устройство и подключить его снова.",
  "firmware_success_b74d4379": "Для лучшего опыта, вы можете перезагрузить устройство и подключить его еще раз.",
  "firmware_fail_c46a5a9b": "Убедитесь, что устройство подключено правильно. Вы можете перезагрузить устройство, подключить его снова, а затем попробовать обновить прошивку еще раз.",
  "getDigital": "[ICON] читать цифровые контактный [PORT]",
  "getAnalog": "[ICON] считать аналоговый порт（A）[PORT]",
  "getPulse": "[ICON]читать пульс штифт[PORT] Времени ожидания[TIME]",
  "SETDIGITAL_LEVEL_0": "высокий",
  "SETDIGITAL_LEVEL_1": "низкий",
  "setDigital": "[ICON] установить выход цифрового порта [PORT] как [LEVEL]",
  "setPwm": "[ICON] установить ШИМ выход [PORT] как [POWER]",
  "SETTONE_NOTE_0": "C2",
  "SETTONE_NOTE_1": "D2",
  "SETTONE_NOTE_2": "E2",
  "SETTONE_NOTE_3": "F2",
  "SETTONE_NOTE_4": "G2",
  "SETTONE_NOTE_5": "A2",
  "SETTONE_NOTE_6": "B2",
  "SETTONE_NOTE_7": "C3",
  "SETTONE_NOTE_8": "D3",
  "SETTONE_NOTE_9": "E3",
  "SETTONE_NOTE_10": "F3",
  "SETTONE_NOTE_11": "G3",
  "SETTONE_NOTE_12": "A3",
  "SETTONE_NOTE_13": "B3",
  "SETTONE_NOTE_14": "C4",
  "SETTONE_NOTE_15": "D4",
  "SETTONE_NOTE_16": "E4",
  "SETTONE_NOTE_17": "F4",
  "SETTONE_NOTE_18": "G4",
  "SETTONE_NOTE_19": "A4",
  "SETTONE_NOTE_20": "B4",
  "SETTONE_NOTE_21": "C5",
  "SETTONE_NOTE_22": "D5",
  "SETTONE_NOTE_23": "E5",
  "SETTONE_NOTE_24": "F5",
  "SETTONE_NOTE_25": "G5",
  "SETTONE_NOTE_26": "A5",
  "SETTONE_NOTE_27": "B5",
  "SETTONE_NOTE_28": "C6",
  "SETTONE_NOTE_29": "D6",
  "SETTONE_NOTE_30": "E6",
  "SETTONE_NOTE_31": "F6",
  "SETTONE_NOTE_32": "G6",
  "SETTONE_NOTE_33": "A6",
  "SETTONE_NOTE_34": "B6",
  "SETTONE_NOTE_35": "C7",
  "SETTONE_NOTE_36": "D7",
  "SETTONE_NOTE_37": "E7",
  "SETTONE_NOTE_38": "F7",
  "SETTONE_NOTE_39": "G7",
  "SETTONE_NOTE_40": "A7",
  "SETTONE_NOTE_41": "B7",
  "SETTONE_NOTE_42": "C8",
  "setTone": "порт [PORT] проигрывает ноту [NOTE] [BEAT] долей",
  "setServo": "задать угол порта сервомотора [PORT] как [ANGLE]",
  "SUSPEND_PORT_0": "2",
  "SUSPEND_PORT_1": "3",
  "SUSPEND_MODE_0": "восходящий",
  "SUSPEND_MODE_1": "нисходящий",
  "SUSPEND_MODE_2": "изменить",
  "SUSPEND_MODE_3": "низкий",
  "suspend": "[ICON] приостановить выполнение пин [PORT] режим [MODE]",
  "cancelSuspend": "[ICON] не останавливать пин [PORT]",
  "CATEGORY_PIN": "Контакт",
  "serialWrite": "записать [TEXT] в последовательный порт",
  "getSerialAvailable": "[ICON] доступные данные последовательного порта",
  "serialRead": "[ICON] прочитать данные из последовательного порта",
  "CATEGORY_SERIALPORT": "последовательный порт",
  "mapping": "[ICON] карта [value] от ( [fromLow] , [fromHigh] ) до ( [toLow] , [toHigh] )",
  "constraint": "[ICON] [x] в диапазоне ( [a],[b] )",
  "TYPECONVERSION_TYPE_0": "целое число",
  "TYPECONVERSION_TYPE_1": "десятичное",
  "TYPECONVERSION_TYPE_2": "строка",
  "typeConversion": "[ICON] [NUMBER] конвертировано в [TYPE]",
  "ASCIICharConversion": "[ICON] [NUMBER] преобразованный номер ASCII",
  "ASCIINumConversion": "[ICON] [STRING] преобразованный номер ASCII",
  "cate_ead4430e": "Дата",
  "getUltrasonic": "[ICON] считать данные с портов trig [PORT1] echo [PORT2] ультразвукового датчика",
  "getTimer": "[ICON] таймер",
  "resetTimer": "[ICON] обнулить таймер",
  "CATEGORY_SENSOR": "Датчик",
  "arduino_when_board_launch": "при запуске Arduino",
  "firmwares_description_0": "ничего",
  "settings_0": "Обновить прошивку"
}
